syntax = "proto3";

package waves.dex.grpc;

option java_package = "com.wavesplatform.dex.api.grpc";

import "transaction.proto";
import "google/protobuf/empty.proto";

service WavesBlockchainApi {
    rpc GetStatuses (TransactionsByIdRequest) returns (stream TransactionStatus);

    rpc Broadcast (BroadcastRequest) returns (BroadcastResponse);

    rpc IsFeatureActivated (IsFeatureActivatedRequest) returns (IsFeatureActivatedResponse);

    rpc AssetDescription (AssetIdRequest) returns (AssetDescriptionResponse);

    rpc HasAssetScript (AssetIdRequest) returns (HasScriptResponse);

    rpc RunAssetScript (RunAssetScriptRequest) returns (RunScriptResponse);

    rpc HasAddressScript (HasAddressScriptRequest) returns (HasScriptResponse);

    rpc RunAddressScript (RunAddressScriptRequest) returns (RunScriptResponse);

    rpc SpendableAssetBalance (SpendableAssetBalanceRequest) returns (SpendableAssetBalanceResponse);

    rpc ForgedOrder (ForgedOrderRequest) returns (ForgedOrderResponse);
}

// Common requests

message TransactionsByIdRequest {
    repeated bytes transaction_ids = 1;
}

message AssetIdRequest {
    bytes assetId = 1;
}

// Common responses

message HasScriptResponse {
    bool has = 1;
}

message RunScriptResponse {
    oneof result {
        string error = 1;
        ScriptEvaluated success = 2;
    }
}

message ScriptEvaluated {
}

// Specific requests and responses

message TransactionStatus {
    enum Status {
        NOT_EXISTS = 0;
        UNCONFIRMED = 1;
        CONFIRMED = 2;
    }

    bytes id = 1;
    Status status = 2;
    int64 height = 3;
}

message BroadcastRequest {
    waves.SignedTransaction transaction = 1;
}

message BroadcastResponse {
    bool isValid = 1;
}

message IsFeatureActivatedRequest {
    int32 featureId = 1;
}

message IsFeatureActivatedResponse {
    bool isActivated = 1;
}

message AssetDescriptionResponse {
    oneof maybeDescription {
        AssetDescription description = 1;
    }
}

message AssetDescription {
    bytes name = 1;
    int32 decimals = 2;
    bool hasScript = 3;
}

message RunAssetScriptRequest {
    bytes assetId = 1;
    waves.SignedTransaction transaction = 2;
}

message RunAddressScriptRequest {
    bytes address = 1;
    waves.SignedTransaction transaction = 2;
}

message HasAddressScriptRequest {
    bytes address = 1;
}

message SpendableAssetBalanceRequest {
    bytes address = 1;
    waves.AssetId assetId = 2;
}

message SpendableAssetBalanceResponse {
    int64 balance = 1;
}

message ForgedOrderRequest {
    bytes orderId = 1;
}

message ForgedOrderResponse {
    bool isForged = 1;
}
